<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/theme-toggles@4.10.1/css/classic.min.css"
/>

<script>
  //load old preferences
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme ?? "");

  // create preferecnce toggle
  class ThemeToggle extends HTMLElement {
    constructor() {
      super();
      const button = this.querySelector("button") as HTMLButtonElement;

      const CODE_LIGHT_THEME = "everforest-light";
      const CODE_DARK_THEME = "everforest-dark";

      function setTheme(dark: boolean) {
        // toggle button state itself to show the right svg
        button.classList.toggle("theme-toggle--toggled", dark);

        document.documentElement.classList.toggle("dark", dark);
        document.documentElement.dataset.theme = dark ? CODE_DARK_THEME : CODE_LIGHT_THEME;

        // set the aria-pressed attribute, dark mode === aria-pressed=true
        button.setAttribute("aria-pressed", String(dark));
        window.localStorage.setItem("theme", dark ? "dark" : "light");
      }

      // button clicked, flip mode
      button.addEventListener("click", () => setTheme(!this.isDark()));

      // initialise from stored preference / system preference
      const stored = typeof localStorage !== "undefined" && localStorage.getItem("theme");
      const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
      const initialDark = stored ? stored === "dark" : prefersDark;
      setTheme(initialDark);
    }

    // returns if the root element contains the dark class
    isDark() {
      return document.documentElement.classList.contains("dark");
    }
  }

  customElements.define("theme-toggle", ThemeToggle);
</script>

<theme-toggle class="ms-auto">
  <button class="theme-toggle px-2 align-bottom" type="button" title="Toggle theme" aria-label="Toggle theme">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      aria-hidden="true"
      width="1.5em"
      height="1.5em"
      fill="currentColor"
      stroke-linecap="round"
      class="theme-toggle__classic"
      viewBox="0 0 32 32"
    >
      <clipPath id="theme-toggle__classic__cutout">
        <path d="M0-5h30a1 1 0 0 0 9 13v24H0Z"></path>
      </clipPath>
      <g clip-path="url(#theme-toggle__classic__cutout)">
        <circle cx="16" cy="16" r="9.34"></circle>
        <g stroke="currentColor" stroke-width="1.5">
          <path d="M16 5.5v-4"></path>
          <path d="M16 30.5v-4"></path>
          <path d="M1.5 16h4"></path>
          <path d="M26.5 16h4"></path>
          <path d="m23.4 8.6 2.8-2.8"></path>
          <path d="m5.7 26.3 2.9-2.9"></path>
          <path d="m5.8 5.8 2.8 2.8"></path>
          <path d="m23.4 23.4 2.9 2.9"></path>
        </g>
      </g>
    </svg>
  </button>
</theme-toggle>
